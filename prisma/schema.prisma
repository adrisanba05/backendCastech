generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Estado {
  id            Int             @id @default(autoincrement())
  estado        String
  Asistencias   Asistencias[]
  Cursos        Cursos[]
  Estudiantes   Estudiantes[]
  Inscripciones Inscripciones[]
  Usuario       Usuario[]

  @@map("Estado")
}

model Asistencias {
  id              Int           @id @default(autoincrement())
  fecha_clase     DateTime      @default(now())
  observaciones   String
  inscripcionesId Int
  usuarioId       Int
  estadoId        Int
  Estado          Estado        @relation(fields: [estadoId], references: [id])
  Inscripciones   Inscripciones @relation(fields: [inscripcionesId], references: [id], onDelete: Cascade)
  Usuario         Usuario       @relation(fields: [usuarioId], references: [id])
}

model Cursos {
  id            Int             @id @default(autoincrement())
  codigo_curso  String          @unique
  nombre_curso  String
  nivel         String
  descripcion   String
  intensidad    Int
  modalidad     String
  valor         Int
  fecha_inicio  DateTime
  fecha_fin     DateTime
  usuarioId     Int
  estadoId      Int
  Estado        Estado          @relation(fields: [estadoId], references: [id])
  Usuario       Usuario         @relation(fields: [usuarioId], references: [id])
  Inscripciones Inscripciones[]
}

model Estudiantes {
  id               Int             @id @default(autoincrement())
  nombre           String
  apellido         String
  tipo_documento   String
  numero_documento String          @unique
  fecha_nacimiento DateTime
  correo           String          @unique
  telefono         String
  ciudad           String
  estadoId         Int
  created_at       DateTime        @default(now())
  updated_at       DateTime
  Estado           Estado          @relation(fields: [estadoId], references: [id])
  Inscripciones    Inscripciones[]
}

model Inscripciones {
  id                Int           @id @default(autoincrement())
  fecha_inscripcion DateTime      @default(now())
  estudianteId      Int
  cursoId           Int
  estadoId          Int
  created_at        DateTime      @default(now())
  updated_at        DateTime
  Asistencias       Asistencias[]
  Cursos            Cursos        @relation(fields: [cursoId], references: [id])
  Estado            Estado        @relation(fields: [estadoId], references: [id])
  Estudiantes       Estudiantes   @relation(fields: [estudianteId], references: [id])
}

model Usuario {
  id              Int           @id @default(autoincrement())
  usuario         String        @unique
  nombre_completo String
  correo          String        @unique
  contrase_a      String        @map("contrase√±a")
  rol             String
  estadoId        Int
  Asistencias     Asistencias[]
  Cursos          Cursos[]
  Estado          Estado        @relation(fields: [estadoId], references: [id])
}
